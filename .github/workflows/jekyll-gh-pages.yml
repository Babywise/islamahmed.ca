# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Test job
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # Fetches the repository code to run tests
        uses: actions/checkout@v4

      - name: Set up Node
        # Sets up Node.js environment and configures npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 23.3.0

      # Cache dependencies to improve the workflow execution time
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        # Performs a clean install of dependencies based on package-lock.json
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run Vitest tests
        # Executes the test suite using the test script from package.json
        run: npm run test

  # Build job
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # Fetches the repository code to the runner
        uses: actions/checkout@v4

      - name: Set up Node
        # Sets up Node.js environment and configures npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 23.3.0

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        # Performs a clean install of dependencies based on package-lock.json
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        # Builds the project using the build script from package.json
        run: npm run build

      - name: Create 404 page
        # Creates a 404 page by copying the index.html for GitHub Pages routing
        run: cp dist/index.html dist/404.html

      - name: Upload build artifact
        # Saves the build output for deployment
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  # Deploy job
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download build artifact
        # Retrieves the previously built files for deployment
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist

      - name: Setup Pages
        # Configures the GitHub Pages environment
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        # Uploads the built files to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      - name: Deploy to GitHub Pages
        # Deploys the uploaded files to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
